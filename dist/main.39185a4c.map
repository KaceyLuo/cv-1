{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX,EAA0C;AAC1C,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,2pDAAJ;AA8CA,IAAIC,UAAU,EAAd;AACA;AACA,IAAIC,IAAI,CAAR;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,IAAIC,OAAO,SAAPA,IAAO,GAAM;AAAQ;AACrBC,eAAW,YAAM;;AAGb,YAAIJ,OAAOE,CAAP,MAAc,IAAlB,EAAuB;AACvB;AACID,2BAAW,MAAX;AACH,aAHD,MAIK,IAAID,OAAOE,CAAP,MAAc,GAAlB,EAAuB;AAAE;AAC1BD,uBAAW,OAAX;AACH,SAFI,MAEE;AACHA,uBAAWD,OAAOE,CAAP,CAAX,CADG,CACkB;AACxB;AACDN,aAAKS,SAAL,GAAiBJ,OAAjB;AACAF,cAAMM,SAAN,GAAkBL,OAAOM,SAAP,CAAiB,CAAjB,EAAoBJ,CAApB,CAAlB;AACA;AACAK,eAAOC,QAAP,CAAgB,CAAhB,EAAmB,IAAnB;AACAZ,aAAKY,QAAL,CAAc,CAAd,EAAiB,IAAjB;;AAEA,YAAIN,IAAIF,OAAOS,MAAP,GAAgB,CAAxB,EAA2B;AACvB;AACAP,iBAAK,CAAL;AACAC;AACH;AACJ,KAvBD,EAuBG,CAvBH;AAwBH,CAzBD;AA0BAA;AACA","file":"main.39185a4c.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector('#html')//通过css找到一个选择器\r\nlet style = document.querySelector('#style')\r\nlet string = `\r\n/*你好，我是一名前端新人\r\n展示一下前端的一些技能\r\n首先我要准备一个div*/\r\n#div1{\r\n    border:1px solid black;\r\n    width:200px;\r\n    height:200px;\r\n}\r\n/*接下来把div变成一个八卦图\r\n第一步，把div画成一个圆*/\r\n#div1{\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/*八卦图是阴阳的，应该是一黑一白*/\r\n#div1{\r\n    //使用css gradient 让颜色渐变\r\n    background: rgb(255,255,255);\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(188,188,188,1) 50%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个小球 */\r\n#div1::before{\r\n    width:100px;\r\n    height:100px;\r\n    top:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#fff;\r\n    border-radius:50%;\r\n    background: rgb(188,188,188);\r\n    background: radial-gradient(circle, rgba(188,188,188,1) 0%, rgba(255,255,255,1) 22%, rgba(255,255,255,1) 22%, rgba(255,255,255,1) 22%, rgba(0,0,0,1) 24%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width:100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#000;\r\n    border-radius:50%;\r\n    background: rgb(188,188,188);\r\n    background: radial-gradient(circle, rgba(188,188,188,1) 0%, rgba(255,255,255,1) 0%, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 25%)\r\n}\r\n`;\r\nlet string2 = ''\r\n//string=string.replace(/\\n/g,\"br\")    //正则表达式将string里面的回车变成换行\r\nlet n = 0;\r\n\r\n//demo.innerHTML = string.substring(0, n);//修改demo里面的内容\r\n\r\n// setInterval(() => {     //每几秒钟响一次\r\n//     n = n + 1;\r\n//     demo.innerHTML = n;\r\n// }, 1000);\r\n\r\nlet step = () => {       //100毫秒之后按顺序打印数字 模拟setInterval 好处是可以随时停止\r\n    setTimeout(() => {\r\n\r\n\r\n        if (string[n] === \"\\n\")//如果是回车就不照搬\r\n        {\r\n            string2 += \"<br>\";\r\n        }\r\n        else if (string[n] === \" \") { //缩进\r\n            string2 += \"&nbsp\";\r\n        } else {\r\n            string2 += string[n];//如果不是回车就照搬\r\n        }\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        // demo.innerHTML = string.substring(0, n);  因为每次使用innerHTML页面就会显示<br>\r\n        window.scrollTo(0, 9999);\r\n        html.scrollTo(0, 9999);\r\n\r\n        if (n < string.length - 1) {\r\n            //不是最后一个\r\n            n += 1;\r\n            step();\r\n        }\r\n    }, 0);\r\n};\r\nstep();\r\n//step();step(); 不能连续两次使用step 例如第一次要1=>2 第二次要2=>3 执行后1会直接变成3\r\n\r\n\r\n\r\n\r\n"]}