{"mappings":"AAAA,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAO,OAAC,CAAc,AAAd,EAAgC,AAAhC,8BAAgC;;AACxD,GAAf,CAAC,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAQ;AAC3C,GAAG,CAAC,MAAM,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6Cd;AACA,GAAG,CAAC,OAAO,GAAG,CAAE;AAChB,EAA8D,AAA9D,0FAA4F;AAC9D,GAA3B,CAAC,CAAC,GAAG,CAAC;AAET,EAAuD,AAAvD,mEAAqE;AAEvD,EAAsB,AAApC,gDAAkD;AACpC,EAAG,AAAjB,eAAiB;AACjB,EAA0B,AAA1B,wBAA0B;AAC1B,EAAY,AAAZ,UAAY;AAEZ,GAAG,CAAC,IAAI,OAAS,CAAC;IACd,UAAU,KAAO,CAAC;QAGd,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,CAAI,KAElB,OAAO,IAAI,CAAM;aAEhB,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,CAAG,IACtB,OAAO,IAAI,CAAO;aAElB,OAAO,IAAI,MAAM,CAAC,CAAC,EAAE,CAAW,AAAX,EAA6B,AAA7B,2BAA6B;QAEpC,IAAd,CAAC,SAAS,GAAG,OAAO;QACxB,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;QACvC,EAAsE,AAAtE,4FAA8F;QACtE,MAAlB,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI;QACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI;QAErB,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACxB,EAAQ,AAAR,kBAAoB;YACR,CAAX,IAAI,CAAC;YACN,IAAI;QACR,CAAC;IACL,CAAC,EAAE,CAAC;AACR,CAAC;AACD,IAAI,GACJ,CAA4D,AAA5D,EAA4D,AAA5D,8GAA4D","sources":["src/main.js"],"sourcesContent":["let html = document.querySelector('#html')//通过css找到一个选择器\r\nlet style = document.querySelector('#style')\r\nlet string = `\r\n/*你好，我是一名前端新人\r\n展示一下前端的一些技能\r\n首先我要准备一个div*/\r\n#div1{\r\n    border:1px solid black;\r\n    width:200px;\r\n    height:200px;\r\n}\r\n/*接下来把div变成一个八卦图\r\n第一步，把div画成一个圆*/\r\n#div1{\r\n    border-radius:50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/*八卦图是阴阳的，应该是一黑一白*/\r\n#div1{\r\n    //使用css gradient 让颜色渐变\r\n    background: rgb(255,255,255);\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(188,188,188,1) 50%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个小球 */\r\n#div1::before{\r\n    width:100px;\r\n    height:100px;\r\n    top:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#fff;\r\n    border-radius:50%;\r\n    background: rgb(188,188,188);\r\n    background: radial-gradient(circle, rgba(188,188,188,1) 0%, rgba(255,255,255,1) 22%, rgba(255,255,255,1) 22%, rgba(255,255,255,1) 22%, rgba(0,0,0,1) 24%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width:100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    background:#000;\r\n    border-radius:50%;\r\n    background: rgb(188,188,188);\r\n    background: radial-gradient(circle, rgba(188,188,188,1) 0%, rgba(255,255,255,1) 0%, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 25%)\r\n}\r\n`;\r\nlet string2 = ''\r\n//string=string.replace(/\\n/g,\"br\")    //正则表达式将string里面的回车变成换行\r\nlet n = 0;\r\n\r\n//demo.innerHTML = string.substring(0, n);//修改demo里面的内容\r\n\r\n// setInterval(() => {     //每几秒钟响一次\r\n//     n = n + 1;\r\n//     demo.innerHTML = n;\r\n// }, 1000);\r\n\r\nlet step = () => {       //100毫秒之后按顺序打印数字 模拟setInterval 好处是可以随时停止\r\n    setTimeout(() => {\r\n\r\n\r\n        if (string[n] === \"\\n\")//如果是回车就不照搬\r\n        {\r\n            string2 += \"<br>\";\r\n        }\r\n        else if (string[n] === \" \") { //缩进\r\n            string2 += \"&nbsp\";\r\n        } else {\r\n            string2 += string[n];//如果不是回车就照搬\r\n        }\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        // demo.innerHTML = string.substring(0, n);  因为每次使用innerHTML页面就会显示<br>\r\n        window.scrollTo(0, 9999);\r\n        html.scrollTo(0, 9999);\r\n\r\n        if (n < string.length - 1) {\r\n            //不是最后一个\r\n            n += 1;\r\n            step();\r\n        }\r\n    }, 0);\r\n};\r\nstep();\r\n//step();step(); 不能连续两次使用step 例如第一次要1=>2 第二次要2=>3 执行后1会直接变成3\r\n\r\n\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}